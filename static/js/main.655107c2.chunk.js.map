{"version":3,"sources":["lib/parse.js","components/SqlEditor.js","components/TsEditor.js","App.js","serviceWorker.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c1","peg$literalExpectation","peg$c3","peg$c5","peg$c7","peg$c8","peg$c9","peg$classExpectation","peg$c11","peg$c13","peg$c14","peg$c15","peg$otherExpectation","peg$c16","peg$c17","peg$c19","peg$c27","peg$c29","peg$c30","peg$c33","peg$c35","peg$c36","peg$c37","peg$c41","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c54","peg$c56","peg$c57","peg$c59","peg$c62","peg$c64","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","peg$buildStructuredError","s0","s1","s2","peg$parseTableDef","peg$parseSqls","charAt","peg$parseEOF","s4","s6","s8","s9","s10","s11","s12","s13","peg$parse_","substr","peg$parsefield","peg$parseColDef","peg$parseColsDef","peg$parsekeyStat","peg$parseKeyStats","test","tableName","cols","keys","peg$parseIdentity","s5","peg$parsetype","s3","peg$parsedigest","peg$parseintSign","peg$parsetypeModify","peg$parsemodifyVerb","peg$parsecolsModify","peg$parsecommentText","peg$parsecomment","colName","comment","peg$parsedefaultValue","peg$parsedefault","peg$parsekeyName","peg$parsenoPkKey","peg$parsekey","s7","concat","SqlEditor","props","width","placeholder","mode","theme","onLoad","editor","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","minLines","maxLines","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","TsEditor","readOnly","value","code","sqlTypeToTsTypeMap","varchar","int","smallint","bigint","tinyint","App","useState","sqlCode","setSqlCode","tsCode","setTsCode","commentFlag","setCommentFlag","tsPh","astToInterface","tableDef","lines","startLine","col","sqlTypeToTsType","colLine","useEffect","ts","map","err","console","log","errLine","sql2tsCode","window","document","title","className","style","backgroundColor","padding","display","justifyItems","color","alignSelf","paddingLeft","defaultChecked","e","target","checked","gridTemplateColumns","gridTemplateAreas","gap","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"iGAcA,SAASA,EAAgBC,EAASC,EAAUC,EAAOC,GACjDC,KAAKJ,QAAWA,EAChBI,KAAKH,SAAWA,EAChBG,KAAKF,MAAWA,EAChBE,KAAKD,SAAWA,EAChBC,KAAKC,KAAW,cAEuB,oBAA5BC,MAAMC,mBACfD,MAAMC,kBAAkBH,KAAML,IAdlC,SAAsBS,EAAOC,GAC3B,SAASC,IAASN,KAAKO,YAAcH,EACrCE,EAAKE,UAAYH,EAAOG,UACxBJ,EAAMI,UAAY,IAAIF,EAexBG,CAAad,EAAiBO,OAE9BP,EAAgBe,aAAe,SAASb,EAAUC,GAChD,IAAIa,EAA2B,CACzBC,QAAS,SAASC,GAChB,MAAO,IAAOC,EAAcD,EAAYE,MAAQ,KAGlD,MAAS,SAASF,GAChB,IACIG,EADAC,EAAe,GAGnB,IAAKD,EAAI,EAAGA,EAAIH,EAAYK,MAAMC,OAAQH,IACxCC,GAAgBJ,EAAYK,MAAMF,aAAcI,MAC5CC,EAAYR,EAAYK,MAAMF,GAAG,IAAM,IAAMK,EAAYR,EAAYK,MAAMF,GAAG,IAC9EK,EAAYR,EAAYK,MAAMF,IAGpC,MAAO,KAAOH,EAAYS,SAAW,IAAM,IAAML,EAAe,KAGlEM,IAAK,SAASV,GACZ,MAAO,iBAGTW,IAAK,SAASX,GACZ,MAAO,gBAGTY,MAAO,SAASZ,GACd,OAAOA,EAAYa,cAI3B,SAASC,EAAIC,GACX,OAAOA,EAAGC,WAAW,GAAGC,SAAS,IAAIC,cAGvC,SAASjB,EAAckB,GACrB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASL,GAAM,MAAO,OAASD,EAAIC,MACpEK,QAAQ,yBAAyB,SAASL,GAAM,MAAO,MAASD,EAAIC,MAGzE,SAASP,EAAYW,GACnB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASL,GAAM,MAAO,OAASD,EAAIC,MACpEK,QAAQ,yBAAyB,SAASL,GAAM,MAAO,MAASD,EAAIC,MA6CzE,MAAO,YAtCP,SAA0B/B,GACxB,IACImB,EAAGkB,EANoBrB,EAKvBsB,EAAe,IAAIf,MAAMvB,EAASsB,QAGtC,IAAKH,EAAI,EAAGA,EAAInB,EAASsB,OAAQH,IAC/BmB,EAAanB,IATYH,EASahB,EAASmB,GAR1CL,EAAyBE,EAAYuB,MAAMvB,IAalD,GAFAsB,EAAaE,OAETF,EAAahB,OAAS,EAAG,CAC3B,IAAKH,EAAI,EAAGkB,EAAI,EAAGlB,EAAImB,EAAahB,OAAQH,IACtCmB,EAAanB,EAAI,KAAOmB,EAAanB,KACvCmB,EAAaD,GAAKC,EAAanB,GAC/BkB,KAGJC,EAAahB,OAASe,EAGxB,OAAQC,EAAahB,QACnB,KAAK,EACH,OAAOgB,EAAa,GAEtB,KAAK,EACH,OAAOA,EAAa,GAAK,OAASA,EAAa,GAEjD,QACE,OAAOA,EAAaG,MAAM,GAAI,GAAGC,KAAK,MAClC,QACAJ,EAAaA,EAAahB,OAAS,IAQxBqB,CAAiB3C,GAAY,QAJlD,SAAuBC,GACrB,OAAOA,EAAQ,IAAOgB,EAAchB,GAAS,IAAO,eAGM2C,CAAc3C,GAAS,WA01CrF4C,EAAOC,QAAU,CACfC,YAAajD,EACbkD,MAz1CF,SAAmBC,EAAOC,GACxBA,OAAsB,IAAZA,EAAqBA,EAAU,GAEzC,IAiGIC,EAjGAC,EAAa,GAEbC,EAAyB,CAAEC,MAAOC,GAClCC,EAAyBD,EAGzBE,EAASC,EAAuB,UAAU,GAE1CC,EAASD,EAAuB,SAAS,GAEzCE,EAASF,EAAuB,KAAK,GAErCG,EAASH,EAAuB,KAAK,GACrCI,EAAS,QACTC,EAASC,EAAqB,CAAC,MAAM,GAAM,GAE3CC,EAAUP,EAAuB,KAAK,GAItCQ,EAAU,kBACVC,EAAUH,EAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,IAAK,MAAM,GAAO,GACtFI,EAAUC,EAAqB,cAC/BC,EAAU,aACVC,EAAUP,EAAqB,CAAC,IAAK,KAAM,KAAM,OAAO,GAAO,GAE/DQ,GADUH,EAAqB,OAmH1B,CAAE9B,KAAM,QA1GbkC,GANUf,EAAuB,MAAM,GAE7BA,EAAuB,QAAQ,GAE/BA,EAAuB,MAAM,GAE7BA,EAAuB,KAAK,IAItCgB,EAAU,SACVC,EAAUX,EAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GAGpDY,EAAUlB,EAAuB,UAAU,GAE3CmB,EAAUnB,EAAuB,YAAY,GAC7CoB,EAAU,SACVC,EAAUf,EAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GAIpDgB,GAFUhB,EAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,IAAK,CAAC,IAAK,OAAO,GAAO,GAEvEN,EAAuB,YAAY,IAE7CuB,EAAUvB,EAAuB,kBAAkB,GAEnDwB,EAAUxB,EAAuB,WAAW,GAE5CyB,EAAUzB,EAAuB,KAAK,GAEtC0B,EAAU1B,EAAuB,QAAQ,GAEzC2B,EAAU3B,EAAuB,WAAW,GAK5C4B,EAAU5B,EAAuB,KAAK,GAItC6B,EAAU,QACVC,EAAUxB,EAAqB,CAAC,MAAM,GAAM,GAE5CyB,EAAU/B,EAAuB,eAAe,GAKhDgC,EAAUhC,EAAuB,UAAU,GAE3CiC,EAAUjC,EAAuB,OAAO,GAWxCkC,EAAuB,EAEvBC,EAAuB,CAAC,CAAEC,KAAM,EAAGC,OAAQ,IAC3CC,EAAuB,EACvBC,EAAuB,GACvBC,EAAuB,EAI3B,GAAI,cAAehD,EAAS,CAC1B,KAAMA,EAAQiD,aAAa9C,GACzB,MAAM,IAAIhD,MAAM,mCAAqC6C,EAAQiD,UAAY,MAG3E3C,EAAwBH,EAAuBH,EAAQiD,WA2BzD,SAASzC,EAAuBxC,EAAMkF,GACpC,MAAO,CAAE7D,KAAM,UAAWrB,KAAMA,EAAMkF,WAAYA,GAGpD,SAASpC,EAAqB3C,EAAOI,EAAU2E,GAC7C,MAAO,CAAE7D,KAAM,QAASlB,MAAOA,EAAOI,SAAUA,EAAU2E,WAAYA,GAWxE,SAAS/B,EAAqBxC,GAC5B,MAAO,CAAEU,KAAM,QAASV,YAAaA,GAGvC,SAASwE,EAAsBC,GAC7B,IAAwCC,EAApCC,EAAUX,EAAoBS,GAElC,GAAIE,EACF,OAAOA,EAGP,IADAD,EAAID,EAAM,GACFT,EAAoBU,IAC1BA,IASF,IALAC,EAAU,CACRV,MAFFU,EAAUX,EAAoBU,IAEZT,KAChBC,OAAQS,EAAQT,QAGXQ,EAAID,GACmB,KAAxBrD,EAAMjB,WAAWuE,IACnBC,EAAQV,OACRU,EAAQT,OAAS,GAEjBS,EAAQT,SAGVQ,IAIF,OADAV,EAAoBS,GAAOE,EACpBA,EAIX,SAASC,EAAoBC,EAAUC,GACrC,IAAIC,EAAkBP,EAAsBK,GACxCG,EAAkBR,EAAsBM,GAE5C,MAAO,CACLrD,MAAO,CACLwD,OAAQJ,EACRZ,KAAQc,EAAgBd,KACxBC,OAAQa,EAAgBb,QAE1BpE,IAAK,CACHmF,OAAQH,EACRb,KAAQe,EAAcf,KACtBC,OAAQc,EAAcd,SAK5B,SAASgB,EAAS/G,GACZ4F,EAAcI,IAEdJ,EAAcI,IAChBA,EAAiBJ,EACjBK,EAAsB,IAGxBA,EAAoBe,KAAKhH,IAO3B,SAASiH,EAAyBjH,EAAUC,EAAOC,GACjD,OAAO,IAAIJ,EACTA,EAAgBe,aAAab,EAAUC,GACvCD,EACAC,EACAC,GAIJ,SAASqD,IACP,IAAI2D,EAAIC,EAAIC,EAkBZ,OAhBAF,EAAKtB,GACLuB,EAkBF,WACE,IAAID,EAAIC,EAIR,GAFAD,EAAK,IACLC,EAAKE,OACMjE,EACT,KAAO+D,IAAO/D,GACZ8D,EAAGF,KAAKG,GACRA,EAAKE,SAGPH,EAAK9D,EAGP,OAAO8D,EAhCFI,MACMlE,IACTgE,EAkUJ,WACE,IAAIF,EAAIC,EAERD,EAAKtB,EACLM,IACIjD,EAAM3B,OAASsE,GACjBuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASvC,IAExC0B,IACIiB,IAAO/D,EACT8D,OAAK,GAELtB,EAAcsB,EACdA,EAAK9D,GAGP,OAAO8D,EAtVAM,MACMpE,EAET8D,EADAC,EAAK,CAACA,EAAIC,IAOZxB,EAAcsB,EACdA,EAAK9D,GAGA8D,EAoBT,SAASG,IACP,IAAIH,EAAQE,EAAQK,EAAQC,EAAQC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAI3D,GAFAd,EAAKtB,EACAqC,OACM7E,EAQT,GAjRS,WA0QLH,EAAMiF,OAAOtC,EAAa,IAC5BwB,EA3QO,SA4QPxB,GAAe,IAEfwB,EAAKhE,EACmB,IAApB8C,GAAyBa,EAAStD,IAEpC2D,IAAOhE,EAET,GADK6E,OACM7E,EAQT,GAzRK,UAkRDH,EAAMiF,OAAOtC,EAAa,IAC5B6B,EAnRG,QAoRH7B,GAAe,IAEf6B,EAAKrE,EACmB,IAApB8C,GAAyBa,EAASpD,IAEpC8D,IAAOrE,EAET,GADK6E,OACM7E,EAET,IADAsE,EAAKS,QACM/E,EAET,GADK6E,OACM7E,EAQT,GAPsC,KAAlCH,EAAMjB,WAAW4D,IACnB+B,EA/RL,IAgSK/B,MAEA+B,EAAKvE,EACmB,IAApB8C,GAAyBa,EAASnD,IAEpC+D,IAAOvE,EAET,IADAwE,EA0MlB,WACE,IAAIV,EAAIC,EAIR,GAFAD,EAAK,IACLC,EAAKiB,QACMhF,EACT,KAAO+D,IAAO/D,GACZ8D,EAAGF,KAAKG,GACRA,EAAKiB,UAGPlB,EAAK9D,EAGP,OAAO8D,EAxNcmB,MACMjF,EAKT,IAJAyE,EA+/BpB,WACE,IAAIX,EAAIC,EAIR,GAFAD,EAAK,IACLC,EAAKmB,QACMlF,EACT,KAAO+D,IAAO/D,GACZ8D,EAAGF,KAAKG,GACRA,EAAKmB,UAGPpB,EAAK9D,EAGP,OAAO8D,EA7gCiBqB,MACMnF,IACVyE,EAAM,MAEJA,IAAQzE,EAQV,GAPsC,KAAlCH,EAAMjB,WAAW4D,IACnBkC,EA5SX,IA6SWlC,MAEAkC,EAAM1E,EACkB,IAApB8C,GAAyBa,EAASlD,IAEpCiE,IAAQ1E,EAAY,CAStB,GARA2E,EAAM,GACFjE,EAAO0E,KAAKvF,EAAMsE,OAAO3B,KAC3BoC,EAAM/E,EAAMsE,OAAO3B,GACnBA,MAEAoC,EAAM5E,EACkB,IAApB8C,GAAyBa,EAAShD,IAEpCiE,IAAQ5E,EACV,KAAO4E,IAAQ5E,GACb2E,EAAIf,KAAKgB,GACLlE,EAAO0E,KAAKvF,EAAMsE,OAAO3B,KAC3BoC,EAAM/E,EAAMsE,OAAO3B,GACnBA,MAEAoC,EAAM5E,EACkB,IAApB8C,GAAyBa,EAAShD,SAI1CgE,EAAM3E,EAEJ2E,IAAQ3E,GAC4B,KAAlCH,EAAMjB,WAAW4D,IACnBoC,EAvUd,IAwUcpC,MAEAoC,EAAM5E,EACkB,IAApB8C,GAAyBa,EAAS9C,IAEpC+D,IAAQ5E,GACJ6E,OACM7E,GACK8D,EAEfA,EA/Uf,CAACuB,UA8U2Bf,EA9URgB,KA8UYd,EA9UAe,KA8UId,KAOvBjC,EAAcsB,EACdA,EAAK9D,KAGPwC,EAAcsB,EACdA,EAAK9D,QAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,EAGP,OAAO8D,EAGT,SAAS0B,IACP,IAAI1B,EAAIC,EAUR,GARAD,EAAK,GACDhD,EAAQsE,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAS5C,IAEpCgD,IAAO/D,EACT,KAAO+D,IAAO/D,GACZ8D,EAAGF,KAAKG,GACJjD,EAAQsE,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAS5C,SAI1C+C,EAAK9D,EAGP,OAAO8D,EAGT,SAASe,KACP,IAAIf,EAAIC,EAWR,IATAjB,IACAgB,EAAK,GACD5C,EAAQkE,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASxC,IAEjC4C,IAAO/D,GACZ8D,EAAGF,KAAKG,GACJ7C,EAAQkE,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASxC,IAS1C,OANA2B,IACIgB,IAAO9D,IACT+D,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAS3C,IAGjC8C,EA0GT,SAASkB,KACP,IAAIlB,EAAQE,EAAQK,EAAIoB,EAAYlB,EAAIC,EAkFxC,OAhFAV,EAAKtB,EACAqC,OACM7E,IACTgE,EAAKe,QACM/E,GACJ6E,OACM7E,IACTqE,EA4ER,WACE,IAAIP,EAAIC,EAAIC,EAEZF,EAAKtB,EACLuB,EAAK,GACDzC,EAAQ8D,KAAKvF,EAAMsE,OAAO3B,KAC5BwB,EAAKnE,EAAMsE,OAAO3B,GAClBA,MAEAwB,EAAKhE,EACmB,IAApB8C,GAAyBa,EAASpC,IAExC,GAAIyC,IAAOhE,EACT,KAAOgE,IAAOhE,GACZ+D,EAAGH,KAAKI,GACJ1C,EAAQ8D,KAAKvF,EAAMsE,OAAO3B,KAC5BwB,EAAKnE,EAAMsE,OAAO3B,GAClBA,MAEAwB,EAAKhE,EACmB,IAApB8C,GAAyBa,EAASpC,SAI1CwC,EAAK/D,EAEH+D,IAAO/D,IACM8D,EACfC,EAAaA,EA3oByBzE,KAAK,KA+oB7C,OAFAwE,EAAKC,EA1GM2B,MACM1F,IACTyF,EAoIV,WACE,IAAI3B,EAAIC,EAAIC,EAAI2B,EAAItB,EAAIoB,EAAInB,EAE5BR,EAAKtB,EACiC,KAAlC3C,EAAMjB,WAAW4D,IACnBuB,EA7sBS,IA8sBTvB,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASnD,IAEpCuD,IAAO/D,IACTgE,EAiDJ,WACE,IAAIF,EAAIC,EAERD,EAAK,GACDpC,EAAQ0D,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAShC,IAExC,GAAIoC,IAAO/D,EACT,KAAO+D,IAAO/D,GACZ8D,EAAGF,KAAKG,GACJrC,EAAQ0D,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAShC,SAI1CmC,EAAK9D,EAGP,OAAO8D,EA3EA8B,MACM5F,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBmD,EArtBK,IAstBLnD,MAEAmD,EAAK3F,EACmB,IAApB8C,GAAyBa,EAASlD,IAEpCkF,IAAO3F,IACTqE,EAAKQ,QACM7E,IACTyF,EA/CV,WACE,IAAI3B,EAlpBQ,WAopBRjE,EAAMiF,OAAOtC,EAAa,IAC5BsB,EArpBU,SAspBVtB,GAAe,IAEfsB,EAAK9D,EACmB,IAApB8C,GAAyBa,EAASnC,IAEpCsC,IAAO9D,IAzpBC,aA0pBNH,EAAMiF,OAAOtC,EAAa,IAC5BsB,EA3pBQ,WA4pBRtB,GAAe,IAEfsB,EAAK9D,EACmB,IAApB8C,GAAyBa,EAASlC,KAI1C,OAAOqC,EA2BM+B,MACM7F,IACTyF,EAAK,MAEHA,IAAOzF,IACTsE,EAAKO,QACM7E,EAET8D,EADAC,EAAK,CAACA,EAAIC,EAAI2B,EAAItB,EAAIoB,EAAInB,IAO5B9B,EAAcsB,EACdA,EAAK9D,KAOTwC,EAAcsB,EACdA,EAAK9D,KAOTwC,EAAcsB,EACdA,EAAK9D,GAGP,OAAO8D,EA9LMgC,MACM9F,IACTyF,EAAK,MAEHA,IAAOzF,GACJ6E,OACM7E,GA2WvB,WACE,IAAI8D,EAAIC,EAAIC,EAAI2B,EAEhB7B,EAAK,GACLC,EAAKvB,GACLwB,EAAK+B,QACM/F,IACT2F,EAAKd,QACM7E,EAET+D,EADAC,EAAK,CAACA,EAAI2B,IAOZnD,EAAcuB,EACdA,EAAK/D,GAEP,KAAO+D,IAAO/D,GACZ8D,EAAGF,KAAKG,GACRA,EAAKvB,GACLwB,EAAK+B,QACM/F,IACT2F,EAAKd,QACM7E,EAET+D,EADAC,EAAK,CAACA,EAAI2B,IAOZnD,EAAcuB,EACdA,EAAK/D,GAIT,OAAO8D,EAhZUkC,KACMhG,IACTuE,EAiZhB,WACE,IAAIT,EAAIC,EAAQ4B,EAAItB,EAAIoB,EAExB3B,EAAKtB,EA/6BO,YAg7BR3C,EAAMiF,OAAOtC,EAAa,IAC5BuB,EAj7BU,UAk7BVvB,GAAe,IAEfuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAS1B,IAEpC8B,IAAO/D,GACJ6E,OACM7E,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBmD,EA/7BM,IAg8BNnD,MAEAmD,EAAK3F,EACmB,IAApB8C,GAAyBa,EAAS5B,IAEpC4D,IAAO3F,IACTqE,EA8ER,WACE,IAAIP,EAAIC,EAERD,EAAK,GACD3B,EAAQiD,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASvB,IAExC,GAAI2B,IAAO/D,EACT,KAAO+D,IAAO/D,GACZ8D,EAAGF,KAAKG,GACJ5B,EAAQiD,KAAKvF,EAAMsE,OAAO3B,KAC5BuB,EAAKlE,EAAMsE,OAAO3B,GAClBA,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASvB,SAI1C0B,EAAK9D,EAGP,OAAO8D,EAxGImC,MACMjG,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBiD,EAz8BE,IA08BFjD,MAEAiD,EAAKzF,EACmB,IAApB8C,GAAyBa,EAAS5B,IAEpC0D,IAAOzF,GACM8D,EACfC,EAAaM,EA18BT/E,KAAK,IA28BTwE,EAAKC,IAELvB,EAAcsB,EACdA,EAAK9D,KAOTwC,EAAcsB,EACdA,EAAK9D,KAOTwC,EAAcsB,EACdA,EAAK9D,GAGP,OAAO8D,EAzcYoC,MACMlG,IACTuE,EAAK,MAEHA,IAAOvE,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBgC,EA3jBN,IA4jBMhC,MAEAgC,EAAKxE,EACmB,IAApB8C,GAAyBa,EAAStC,IAEpCmD,IAAOxE,IACTwE,EAAK,MAEHA,IAAOxE,GACH6E,OACM7E,GACK8D,EAEfA,EAtkBT,CAACqC,QAqkBqBnC,EArkBH7E,KAqkBOkF,EArkBI+B,QAqkBA7B,GArkBoB,MA4kB3C/B,EAAcsB,EACdA,EAAK9D,KAGPwC,EAAcsB,EACdA,EAAK9D,KAWXwC,EAAcsB,EACdA,EAAK9D,KAebwC,EAAcsB,EACdA,EAAK9D,GAGA8D,EAoLT,SAASiC,KACP,IAAIjC,EAsBJ,OApBAA,EAuBF,WACE,IAAIA,EAAIC,EAAIC,EAAI2B,EAAItB,EAEpBP,EAAKtB,EAhzBO,YAizBR3C,EAAMiF,OAAOtC,EAAa,IAC5BuB,EAlzBU,UAmzBVvB,GAAe,IAEfuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAS7B,IAEpCiC,IAAO/D,IACTgE,EAAKa,QACM7E,IACT2F,EA6BN,WACE,IAAI7B,EAAIC,EAAIC,EAAI2B,EAEhB7B,EAAKtB,EACiC,KAAlC3C,EAAMjB,WAAW4D,IACnBuB,EA31BU,IA41BVvB,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAAS5B,IAEpCgC,IAAO/D,IACTgE,EAAKwB,OACMxF,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBmD,EAr2BM,IAs2BNnD,MAEAmD,EAAK3F,EACmB,IAApB8C,GAAyBa,EAAS5B,IAEpC4D,IAAO3F,EAET8D,EADAC,EAAK,CAACA,EAAIC,EAAI2B,IAGdnD,EAAcsB,EACdA,EAAK9D,KAOTwC,EAAcsB,EACdA,EAAK9D,GAEH8D,IAAO9D,IAx3BC,SAy3BNH,EAAMiF,OAAOtC,EAAa,IAC5BsB,EA13BQ,OA23BRtB,GAAe,IAEfsB,EAAK9D,EACmB,IAApB8C,GAAyBa,EAAS3B,KAI1C,OAAO8B,EA3EEuC,MACMrG,IACTqE,EAAKQ,QACM7E,IACTqE,EAAK,MAEHA,IAAOrE,EAET8D,EADAC,EAAK,CAACA,EAAIC,EAAI2B,EAAItB,IAGlB7B,EAAcsB,EACdA,EAAK9D,KAWXwC,EAAcsB,EACdA,EAAK9D,GAGP,OAAO8D,EA/DFwC,MACMtG,IA3xBC,aA4xBNH,EAAMiF,OAAOtC,EAAa,IAC5BsB,EA7xBQ,WA8xBRtB,GAAe,IAEfsB,EAAK9D,EACmB,IAApB8C,GAAyBa,EAAS/B,IAEpCkC,IAAO9D,IAjyBD,mBAkyBJH,EAAMiF,OAAOtC,EAAa,KAC5BsB,EAnyBM,iBAoyBNtB,GAAe,KAEfsB,EAAK9D,EACmB,IAApB8C,GAAyBa,EAAS9B,MAKrCiC,EAmMT,SAASiB,KACP,IAAIjB,EAAIC,EAAIC,EAAI2B,EAqChB,OAnCA7B,EAAKtB,EACiC,KAAlC3C,EAAMjB,WAAW4D,IACnBuB,EAv+BU,IAw+BVvB,MAEAuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASzB,IAEpC6B,IAAO/D,IACTgE,EAAKwB,OACMxF,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBmD,EAj/BM,IAk/BNnD,MAEAmD,EAAK3F,EACmB,IAApB8C,GAAyBa,EAASzB,IAEpCyD,IAAO3F,GACM8D,EAEfA,EADAC,EAAaC,EAt/BH1E,KAAK,MAy/BfkD,EAAcsB,EACdA,EAAK9D,KAOTwC,EAAcsB,EACdA,EAAK9D,GAGA8D,EAgCT,SAASyC,KACP,IAAIzC,EAAIC,EAmBR,MArjCY,gBAoiCRlE,EAAMiF,OAAOtC,EAAa,KAC5BsB,EAriCU,cAsiCVtB,GAAe,KAEfsB,EAAK9D,EACmB,IAApB8C,GAAyBa,EAAStB,IAEpCyB,IAAO9D,IACT8D,EAAKtB,GACLuB,EAWJ,WACE,IAAID,EAAIC,EAAQ4B,EAAQF,EAExB3B,EAAKtB,EAtjCO,WAujCR3C,EAAMiF,OAAOtC,EAAa,IAC5BuB,EAxjCU,SAyjCVvB,GAAe,IAEfuB,EAAK/D,EACmB,IAApB8C,GAAyBa,EAASrB,IAEpCyB,IAAO/D,IACT+D,EAAK,MAEHA,IAAO/D,GACJ6E,OACM7E,GAjkCD,QAkkCJH,EAAMiF,OAAOtC,EAAa,IAC5BmD,EAnkCM,MAokCNnD,GAAe,IAEfmD,EAAK3F,EACmB,IAApB8C,GAAyBa,EAASpB,IAEpCoD,IAAO3F,GACJ6E,OACM7E,IACTyF,EAAKV,QACM/E,GACM8D,EAEfA,EADAC,EAAa0B,IAWjBjD,EAAcsB,EACdA,EAAK9D,KAOTwC,EAAcsB,EACdA,EAAK9D,GAGP,OAAO8D,EAhEA0C,MACMxG,IACM8D,EACfC,EAAaA,GA7iCM,MA+iCrBD,EAAKC,GAGAD,EA2DT,SAAS2C,KACP,IAAI3C,EAAIC,EAAIC,EA4BZ,OA1BAF,EAAKtB,GACLuB,EAAKgB,QACM/E,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBwB,EA7pCQ,IA8pCRxB,MAEAwB,EAAKhE,EACmB,IAApB8C,GAAyBa,EAAStC,IAEpC2C,IAAOhE,IACTgE,EAAK,MAEHA,IAAOhE,GACM8D,EAEfA,EADAC,EAAaA,IAGbvB,EAAcsB,EACdA,EAAK9D,KAGPwC,EAAcsB,EACdA,EAAK9D,GAGA8D,EAGT,SAASoB,KACP,IAAIpB,EAAQE,EAAQK,EAAIoB,EAAInB,EAAIoC,EAIhC,GAFA5C,EAAKtB,EACAqC,OACM7E,EAET,IADAgE,EAAKuC,QACMvG,EAET,GADK6E,OACM7E,EAQT,GAPsC,KAAlCH,EAAMjB,WAAW4D,IACnB6B,EAztCG,IA0tCH7B,MAEA6B,EAAKrE,EACmB,IAApB8C,GAAyBa,EAASnD,IAEpC6D,IAAOrE,EAAY,CAGrB,GAFAyF,EAAK,IACLnB,EAAKmC,QACMzG,EACT,KAAOsE,IAAOtE,GACZyF,EAAG7B,KAAKU,GACRA,EAAKmC,UAGPhB,EAAKzF,EAEHyF,IAAOzF,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnB8B,EA1uCD,IA2uCC9B,MAEA8B,EAAKtE,EACmB,IAApB8C,GAAyBa,EAASlD,IAEpC6D,IAAOtE,GAC6B,KAAlCH,EAAMjB,WAAW4D,IACnBkE,EA5tCF,IA6tCElE,MAEAkE,EAAK1G,EACmB,IAApB8C,GAAyBa,EAAStC,IAEpCqF,IAAO1G,IACT0G,EAAK,MAEHA,IAAO1G,GACJ6E,OACM7E,GACM8D,EAEfA,EAprCL,CAAC9G,KAmrCiBgH,EAnrCDuB,KAAM,GAAGoB,OAmrCJlB,MAOnBjD,EAAcsB,EACdA,EAAK9D,KAGPwC,EAAcsB,EACdA,EAAK9D,KAGPwC,EAAcsB,EACdA,EAAK9D,QAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,OAGPwC,EAAcsB,EACdA,EAAK9D,EAGP,OAAO8D,EAsBT,IAFA/D,EAAaK,OAEMJ,GAAcwC,IAAgB3C,EAAM3B,OACrD,OAAO6B,EAMP,MAJIA,IAAeC,GAAcwC,EAAc3C,EAAM3B,QACnDyF,EAvrCK,CAAExE,KAAM,QA0rCT0E,EACJhB,EACAD,EAAiB/C,EAAM3B,OAAS2B,EAAMsE,OAAOvB,GAAkB,KAC/DA,EAAiB/C,EAAM3B,OACnBmF,EAAoBT,EAAgBA,EAAiB,GACrDS,EAAoBT,EAAgBA,O,sOCt7C/BgE,MAhCf,SAAmBC,GAKjB,OACE,kBAAC,IAAD,CACEC,MAAOD,EAAMC,MACbC,YAAY,8BACZC,KAAK,QACLC,MAAOJ,EAAMI,MACbjK,KAAK,YACLkK,OAXJ,SAAgBC,KAYZC,SAAUP,EAAMO,SAChBC,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,SAAU,IACVC,SAAS,WACTC,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBP,YAAY,EACZQ,iBAAiB,EACjBC,QAAS,M,gBCGFC,MA5Bf,SAAkBpB,GAChB,OACE,kBAAC,IAAD,CACEC,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,KAAK,aACLC,MAAOJ,EAAMI,MACbjK,KAAK,WACLkL,UAAY,EACZb,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBW,MAAOtB,EAAMuB,KACbX,SAAU,IACVC,SAAS,WACTC,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBR,YAAY,EACZS,QAAS,MCfXK,G,wBAAqB,CACzBC,QAAS,SACTxK,KAAM,SACNyK,IAAK,SACLC,SAAU,SACVC,OAAQ,SACRC,QAAS,WA8HIC,MA3Hf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGaJ,mBAAS,WAHtB,mBAGN3B,EAHM,aAIyB2B,oBAAS,IAJlC,mBAINK,EAJM,KAIOC,EAJP,KAKPC,EAAO,oCA8Bb,SAASC,EAAeC,GACtB,GAAIA,EAAShE,UAAW,CACtB,IAAIiE,EAAQ,GACRC,EAAS,oBAAgBF,EAAShE,UAAzB,MACbiE,EAAM1F,KAAK2F,GAHW,oBAINF,EAAS/D,MAJH,IAItB,2BAA+B,CAAC,IAAvBkE,EAAsB,QACzBrK,EAAOsK,EAAgBD,EAAIrK,MAC3BuK,EAAO,YAAQF,EAAIrD,QAAZ,aAAwBhH,GACnC,GAAI8J,GAAeO,EAAIpD,QAErBsD,GADgB,cAAUF,EAAIpD,SAGhCkD,EAAM1F,KAAK8F,IAXS,8BAgBtB,OAFAJ,EAAM1F,KADQ,KAEd0F,EAAM1F,KAAK,MACJ0F,EAAMhK,KAAK,MAElB,MAAO,KAIX,SAASmK,EAAgBtK,GACvB,OAAOkJ,EAAmBlJ,IAAS,MAkBrC,OAlEAwK,qBAAU,WACR,IAAIC,EAkDN,SAAoBxB,GAClB,IAAKA,EAAM,OAAOe,EAClB,IAIE,OAHevJ,gBAAMwI,GACF,GACFyB,IAAIT,GAAgB9J,KAAK,IAE1C,MAAOwK,GACPC,QAAQC,IAAIF,GACZ,IAAMG,EAAUH,EAAIhN,SAASoD,MAE7B,OADA6J,QAAQC,IAAIC,GACLH,EAAInN,SA7DJuN,CAAWrB,GACpBG,EAAUY,KACT,CAACf,EAASI,IAEbU,qBAAU,WACRQ,OAAOC,SAASC,MAAQ,YA6DxB,yBACEC,UAAU,MACVC,MAAO,CAAEC,gBAAiB,UAAWC,QAAS,SAE9C,yBAAKH,UAAU,0BAA0BC,MAAO,CAACG,QAAQ,OAAQC,aAAc,eAC7E,0BAAML,UAAU,eAAeC,MAAO,CAAElD,SAAU,OAAQuD,MAAO,iBAAjE,UAIA,yBACEN,UAAU,UACVC,MAAO,CAAEG,QAAS,OAAQG,UAAW,WAAYC,YAAa,SAE9D,yBAAKR,UAAU,WACb,2BAAOC,MAAO,CAACG,QAAQ,SACrB,kBAAC,IAAD,CAAQH,MAAO,CAACM,UAAW,UACzBE,eAAgB9B,EAChB7B,SApEd,SAAuB4D,GACjBA,EAAEC,OAAOC,QACXhC,GAAe,GAEfA,GAAe,MAkEP,0BAAMqB,MAAO,CAAEK,MAAO,SAAUvD,SAAU,OAAQwD,UAAW,SAAUC,YAAa,QAApF,gBAMR,yBAAKR,UAAU,cAAcC,MAnFT,CACtBG,QAAS,OACTS,oBAAqB,UACrBC,kBAAmB,uBACnBC,IAAK,cAgFD,kBAAC,EAAD,CACEf,UAAU,aACVxD,MAAM,OACNsB,KAAMS,EACNzB,SArGR,SAAqBgB,GACnBU,EAAWV,IAqGLnB,MAAOA,IAET,kBAAC,EAAD,CACEF,YAAaoC,EACbmB,UAAU,YACVxD,MAAM,OACNsB,KAAMW,EACN9B,MAAOA,OC5HGqE,QACW,cAA7BnB,OAAOrN,SAASyO,UAEe,UAA7BpB,OAAOrN,SAASyO,UAEhBpB,OAAOrN,SAASyO,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvB,SAASwB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMzP,c","file":"static/js/main.655107c2.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = \"CREATE\",\n      peg$c1 = peg$literalExpectation(\"CREATE\", false),\n      peg$c2 = \"TABLE\",\n      peg$c3 = peg$literalExpectation(\"TABLE\", false),\n      peg$c4 = \"(\",\n      peg$c5 = peg$literalExpectation(\"(\", false),\n      peg$c6 = \")\",\n      peg$c7 = peg$literalExpectation(\")\", false),\n      peg$c8 = /^[^;]/,\n      peg$c9 = peg$classExpectation([\";\"], true, false),\n      peg$c10 = \";\",\n      peg$c11 = peg$literalExpectation(\";\", false),\n      peg$c12 = function(tbName, cols, keys) {\n          return {tableName: tbName, cols: cols, keys: keys}\n      },\n      peg$c13 = /^[a-zA-Z0-9_\\-]/,\n      peg$c14 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c15 = peg$otherExpectation(\"whitespace\"),\n      peg$c16 = /^[ \\n\\r\\t]/,\n      peg$c17 = peg$classExpectation([\" \", \"\\n\", \"\\r\", \"\\t\"], false, false),\n      peg$c18 = peg$otherExpectation(\"any\"),\n      peg$c19 = peg$anyExpectation(),\n      peg$c20 = \"\\n\",\n      peg$c21 = peg$literalExpectation(\"\\n\", false),\n      peg$c22 = \"\\r\\n\",\n      peg$c23 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c24 = \"\\r\",\n      peg$c25 = peg$literalExpectation(\"\\r\", false),\n      peg$c26 = \",\",\n      peg$c27 = peg$literalExpectation(\",\", false),\n      peg$c28 = function(colName, type, comment) {\n        return {colName: colName, type:type, comment: comment || \"\"}\n      },\n      peg$c29 = /^[a-z]/,\n      peg$c30 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c31 = function(char) {return char.join(\"\")},\n      peg$c32 = \"signed\",\n      peg$c33 = peg$literalExpectation(\"signed\", false),\n      peg$c34 = \"unsigned\",\n      peg$c35 = peg$literalExpectation(\"unsigned\", false),\n      peg$c36 = /^[0-9]/,\n      peg$c37 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c38 = /^[a-zA-Z_0-9]/,\n      peg$c39 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\", [\"0\", \"9\"]], false, false),\n      peg$c40 = \"NOT NULL\",\n      peg$c41 = peg$literalExpectation(\"NOT NULL\", false),\n      peg$c42 = \"AUTO_INCREMENT\",\n      peg$c43 = peg$literalExpectation(\"AUTO_INCREMENT\", false),\n      peg$c44 = \"DEFAULT\",\n      peg$c45 = peg$literalExpectation(\"DEFAULT\", false),\n      peg$c46 = \"'\",\n      peg$c47 = peg$literalExpectation(\"'\", false),\n      peg$c48 = \"NULL\",\n      peg$c49 = peg$literalExpectation(\"NULL\", false),\n      peg$c50 = \"COMMENT\",\n      peg$c51 = peg$literalExpectation(\"COMMENT\", false),\n      peg$c52 = function(ct) {\n        return ct.join(\"\")\n      },\n      peg$c53 = \"`\",\n      peg$c54 = peg$literalExpectation(\"`\", false),\n      peg$c55 = function(ft) {\n          return ft.join(\"\")\n      },\n      peg$c56 = /^[^']/,\n      peg$c57 = peg$classExpectation([\"'\"], true, false),\n      peg$c58 = \"PRIMARY KEY\",\n      peg$c59 = peg$literalExpectation(\"PRIMARY KEY\", false),\n      peg$c60 = function(noPkKey) {\n         return noPkKey || \"pk\"\n      },\n      peg$c61 = \"UNIQUE\",\n      peg$c62 = peg$literalExpectation(\"UNIQUE\", false),\n      peg$c63 = \"KEY\",\n      peg$c64 = peg$literalExpectation(\"KEY\", false),\n      peg$c65 = function(keyName) {\n         return keyName\n      },\n      peg$c66 = function(kx) {\n        return kx\n      },\n      peg$c67 = function(keyName1, key) {\n        return {name: keyName1, keys: [].concat(key) }\n      },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSqls();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSqls() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseTableDef();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseTableDef();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTableDef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 6) === peg$c0) {\n        s2 = peg$c0;\n        peg$currPos += 6;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c2) {\n            s4 = peg$c2;\n            peg$currPos += 5;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsefield();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s8 = peg$c4;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c5); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseColsDef();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseKeyStats();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s11 = peg$c6;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c7); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = [];\n                          if (peg$c8.test(input.charAt(peg$currPos))) {\n                            s13 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                          } else {\n                            s13 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n                          }\n                          if (s13 !== peg$FAILED) {\n                            while (s13 !== peg$FAILED) {\n                              s12.push(s13);\n                              if (peg$c8.test(input.charAt(peg$currPos))) {\n                                s13 = input.charAt(peg$currPos);\n                                peg$currPos++;\n                              } else {\n                                s13 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c9); }\n                              }\n                            }\n                          } else {\n                            s12 = peg$FAILED;\n                          }\n                          if (s12 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 59) {\n                              s13 = peg$c10;\n                              peg$currPos++;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c11); }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c12(s6, s9, s10);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentity() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c13.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c14); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c13.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c16.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c16.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseany() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseColsDef() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseColDef();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseColDef();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineBreak() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c20;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c22) {\n        s0 = peg$c22;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 13) {\n          s0 = peg$c24;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c25); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseColDef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefield();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetype();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsetypeModify();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsecolsModify();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsecomment();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c26;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c28(s2, s4, s8);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetype() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c29.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c31(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseintSign() {\n    var s0;\n\n    if (input.substr(peg$currPos, 6) === peg$c32) {\n      s0 = peg$c32;\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8) === peg$c34) {\n        s0 = peg$c34;\n        peg$currPos += 8;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetypeModify() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c4;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsedigest();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c6;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c7); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseintSign();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5, s6];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigest() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseword() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c38.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c38.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemodifyVerb() {\n    var s0;\n\n    s0 = peg$parsedefault();\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8) === peg$c40) {\n        s0 = peg$c40;\n        peg$currPos += 8;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 14) === peg$c42) {\n          s0 = peg$c42;\n          peg$currPos += 14;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefault() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c44) {\n      s1 = peg$c44;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedefaultValue();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefaultValue() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s1 = peg$c46;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentity();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c46;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c48) {\n        s0 = peg$c48;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolsModify() {\n    var s0, s1, s2, s3;\n\n    s0 = [];\n    s1 = peg$currPos;\n    s2 = peg$parsemodifyVerb();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$currPos;\n      s2 = peg$parsemodifyVerb();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c46;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsecommentText();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s5 = peg$c46;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c52(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefield() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 96) {\n      s1 = peg$c53;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentity();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 96) {\n          s3 = peg$c53;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c55(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommentText() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c56.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c56.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c57); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyName() {\n    var s0, s1;\n\n    if (input.substr(peg$currPos, 11) === peg$c58) {\n      s0 = peg$c58;\n      peg$currPos += 11;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c59); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsenoPkKey();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c60(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenoPkKey() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c61) {\n      s1 = peg$c61;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c63) {\n          s3 = peg$c63;\n          peg$currPos += 3;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c64); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsefield();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c65(s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekey() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefield();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c26;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c66(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyStat() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsekeyName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s4 = peg$c4;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsekey();\n            if (s6 !== peg$FAILED) {\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsekey();\n              }\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c6;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c7); }\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c26;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c67(s2, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyStats() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsekeyStat();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsekeyStat();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React, {useState}  from \"react\"; import AceEditor from 'react-ace'\n\n\nfunction SqlEditor(props) {\n  function onLoad(editor) {\n    // console.log(editor, \"sqlEditor\")\n  }\n\n  return (\n    <AceEditor\n      width={props.width}\n      placeholder=\"Type SQL DDL Statement Here\"\n      mode=\"mysql\"\n      theme={props.theme}\n      name=\"sqlEditor\"\n      onLoad={onLoad}\n      onChange={props.onChange}\n      fontSize={14}\n      showPrintMargin={false}\n      showGutter={true}\n      highlightActiveLine={true}\n      minLines={100}\n      maxLines=\"Infinity\"\n      setOptions={{\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        enableSnippets: false,\n        showGutter: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}\n    />\n  );\n}\n\nexport default SqlEditor;\n","import React, { useState } from \"react\";\nimport AceEditor from 'react-ace'\nimport * as Toggle from 'react-toggle'\n\nfunction TsEditor(props) {\n  return (\n    <AceEditor\n      width={props.width}\n      placeholder={props.placeholder}\n      mode=\"typescript\"\n      theme={props.theme}\n      name=\"tsEditor\"\n      readOnly = {true}\n      fontSize={14}\n      showPrintMargin={false}\n      showGutter={true}\n      highlightActiveLine={false}\n      value={props.code}\n      minLines={100}\n      maxLines=\"Infinity\"\n      setOptions={{\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        enableSnippets: false,\n        showLineNumbers: true,\n        showGutter: false,\n        tabSize: 2,\n      }}\n    />\n  );\n}\n\nexport default TsEditor;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { parse } from \"./lib/parse\";\nimport SqlEditor from \"./components/SqlEditor\";\nimport TsEditor from \"./components/TsEditor\";\nimport \"ace-builds/src-noconflict/mode-mysql\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/theme-gruvbox\";\nimport Toggle from \"react-toggle\";\nimport \"./css/bootstrap.min.css\";\n\nconst sqlTypeToTsTypeMap = {\n  varchar: \"string\",\n  text: \"string\",\n  int: \"number\",\n  smallint: \"number\",\n  bigint: \"number\",\n  tinyint: \"number\",\n};\n\nfunction App() {\n  const [sqlCode, setSqlCode] = useState(\"\");\n  const [tsCode, setTsCode] = useState(\"\");\n  const [theme, setTheme] = useState(\"gruvbox\");\n  const [commentFlag, setCommentFlag] = useState(true);\n  const tsPh = \"// Generated Typescript Interface\";\n\n  function onSqlChange(code) {\n    setSqlCode(code);\n  }\n\n  useEffect(() => {\n    let ts = sql2tsCode(sqlCode);\n    setTsCode(ts);\n  }, [sqlCode, commentFlag]);\n\n  useEffect(() => {\n    window.document.title = \"SQL2TS\"\n  })\n\n  const containerStyles = {\n    display: \"grid\",\n    gridTemplateColumns: \"6fr 4fr\",\n    gridTemplateAreas: \"sql-editor ts-editor\",\n    gap: \"10px 20px\",\n  };\n\n  function toggleComment(e) {\n    if (e.target.checked) {\n      setCommentFlag(true);\n    } else {\n      setCommentFlag(false);\n    }\n  }\n\n  function astToInterface(tableDef) {\n    if (tableDef.tableName) {\n      let lines = [];\n      let startLine = `interface ${tableDef.tableName} {`;\n      lines.push(startLine);\n      for (let col of tableDef.cols) {\n        let type = sqlTypeToTsType(col.type);\n        let colLine = `  ${col.colName}: ${type}`;\n        if (commentFlag && col.comment) {\n          const colComment = ` // ${col.comment}`;\n          colLine += colComment;\n        }\n        lines.push(colLine);\n      }\n      let endLine = \"}\";\n      lines.push(endLine);\n      lines.push(\"\\n\");\n      return lines.join(\"\\n\");\n    } else {\n      return \"\\n\";\n    }\n  }\n\n  function sqlTypeToTsType(type) {\n    return sqlTypeToTsTypeMap[type] || \"any\";\n  }\n\n  function sql2tsCode(code) {\n    if (!code) return tsPh;\n    try {\n      let parseRet = parse(code);\n      let ret = parseRet[0];\n      let tsCode = ret.map(astToInterface).join(\"\");\n      return tsCode;\n    } catch (err) {\n      console.log(err);\n      const errLine = err.location.start;\n      console.log(errLine);\n      return err.message;\n    }\n  }\n\n  return (\n    <div\n      className=\"app\"\n      style={{ backgroundColor: \"#1D2021\", padding: \"20px\" }}\n    >\n      <nav className=\"navbar navbar-expand-lg\" style={{display:\"flex\", justifyItems: \"flex-start\"}}>\n        <span className=\"navbar-brand\" style={{ fontSize: \"46px\", color: \"antiquewhite\"}}>\n          SQL2TS\n        </span>\n\n        <div\n          className=\"toolbar\"\n          style={{ display: \"flex\", alignSelf: \"flex-end\", paddingLeft: \"20px\" }}\n        >\n          <div className=\"comment\">\n            <label style={{display:\"flex\"}}>\n              <Toggle style={{alignSelf: \"center\"}}\n                defaultChecked={commentFlag}\n                onChange={toggleComment}\n              ></Toggle>\n              <span style={{ color: \"adafae\", fontSize: \"13px\", alignSelf: \"center\", paddingLeft: \"6px\"}}>Comments</span>\n            </label>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"editor-zone\" style={containerStyles}>\n        <SqlEditor\n          className=\"sql-editor\"\n          width=\"auto\"\n          code={sqlCode}\n          onChange={onSqlChange}\n          theme={theme}\n        ></SqlEditor>\n        <TsEditor\n          placeholder={tsPh}\n          className=\"ts-editor\"\n          width=\"auto\"\n          code={tsCode}\n          theme={theme}\n        ></TsEditor>\n      </div>\n\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}