{"version":3,"sources":["lib/parse.js","components/SqlEditor.js","components/TsEditor.js","App.js","serviceWorker.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$classExpectation","peg$c6","peg$c7","peg$c8","peg$c10","peg$c12","peg$c13","peg$c14","peg$c16","peg$c18","peg$c20","peg$c22","peg$c25","peg$c27","peg$c30","peg$c32","peg$c34","peg$c35","peg$c36","peg$otherExpectation","peg$c37","peg$c38","peg$c40","peg$c42","peg$c44","peg$c46","peg$c48","peg$c50","peg$c51","peg$c54","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c64","peg$c66","peg$c68","peg$c70","peg$c73","peg$c75","peg$c76","peg$c78","peg$c80","peg$c83","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","peg$buildStructuredError","s0","s1","s2","peg$parseTableDef","peg$parseCommentLine","peg$parseNoCreateStat","peg$parseSqls","charAt","peg$parseEOF","s3","s4","peg$parse_","test","peg$parseLineBreak","peg$parseCommentLine1","substr","peg$parseCommentLine2","toLowerCase","s6","s8","s9","s10","s11","s12","s13","peg$parsefield","peg$parseColDef","peg$parseColsDef","peg$parsekeyStat","peg$parseKeyStats","s5","s7","peg$parseKV","peg$parsecommentText","peg$parseTableComment","comment","peg$parseTableEnd","tableName","cols","keys","peg$parseword","peg$parseIdentity","map","r","peg$parsetype","peg$parseintSign","peg$parsetypeModify","peg$parsemodifyVerb","peg$parsecolsModify","peg$parsecomment","colName","peg$parsedigits","peg$parsedefaultValue","peg$parsedefault","peg$parsekeyName","peg$parsekeyType","peg$parsenoPkKey","peg$parsekey","concat","SqlEditor","props","width","placeholder","mode","theme","onChange","onLoad","editor","fontSize","showPrintMargin","showGutter","highlightActiveLine","minLines","maxLines","Infinity","value","code","annotations","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","TsEditor","clipboard","useClipboard","handleCopy","React","useCallback","copy","style","float","marginRight","onClick","className","size","readOnly","sqlTypeToTsTypeMap","char","varchar","int","smallint","bigint","tinyint","App","useState","sqlCode","setSqlCode","tsCode","setTsCode","commentFlag","setCommentFlag","tsPh","astToInterface","tableDef","lines","tbCommentLine","startLine","col","sqlTypeToTsType","colLine","colComment","useEffect","ts","err","sql2tsCode","backgroundColor","padding","display","justifyItems","color","alignSelf","paddingLeft","defaultChecked","e","target","checked","gridTemplateColumns","gridTemplateAreas","gap","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7be1a5bb.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = \"#\",\n      peg$c1 = peg$literalExpectation(\"#\", false),\n      peg$c2 = /^[^#\\n\\r]/,\n      peg$c3 = peg$classExpectation([\"#\", \"\\n\", \"\\r\"], true, false),\n      peg$c4 = function() {return \"\"},\n      peg$c5 = \"/*!\",\n      peg$c6 = peg$literalExpectation(\"/*!\", false),\n      peg$c7 = /^[^\\n\\r*\\/]/,\n      peg$c8 = peg$classExpectation([\"\\n\", \"\\r\", \"*\", \"/\"], true, false),\n      peg$c9 = \"*/;\",\n      peg$c10 = peg$literalExpectation(\"*/;\", false),\n      peg$c11 = \"create\",\n      peg$c12 = peg$literalExpectation(\"CREATE\", true),\n      peg$c13 = /^[^;]/,\n      peg$c14 = peg$classExpectation([\";\"], true, false),\n      peg$c15 = \";\",\n      peg$c16 = peg$literalExpectation(\";\", false),\n      peg$c17 = \"table\",\n      peg$c18 = peg$literalExpectation(\"TABLE\", true),\n      peg$c19 = \"(\",\n      peg$c20 = peg$literalExpectation(\"(\", false),\n      peg$c21 = \")\",\n      peg$c22 = peg$literalExpectation(\")\", false),\n      peg$c23 = function(tbName, cols, keys, tbEnd) {\r\n          return {tableName: tbName, cols: cols, keys: keys, comment: tbEnd.comment}\r\n      },\n      peg$c24 = \"=\",\n      peg$c25 = peg$literalExpectation(\"=\", false),\n      peg$c26 = \"default\",\n      peg$c27 = peg$literalExpectation(\"DEFAULT\", true),\n      peg$c28 = function(comment) {\r\n      return {comment:comment}\r\n      },\n      peg$c29 = \"comment\",\n      peg$c30 = peg$literalExpectation(\"COMMENT\", true),\n      peg$c31 = \"'\",\n      peg$c32 = peg$literalExpectation(\"'\", false),\n      peg$c33 = function(ct) {\r\n         return ct.join(\"\")\r\n      },\n      peg$c34 = /^[a-zA-Z0-9_\\-]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c36 = peg$otherExpectation(\"whitespace\"),\n      peg$c37 = /^[ \\n\\r\\t]/,\n      peg$c38 = peg$classExpectation([\" \", \"\\n\", \"\\r\", \"\\t\"], false, false),\n      peg$c39 = peg$otherExpectation(\"any\"),\n      peg$c40 = peg$anyExpectation(),\n      peg$c41 = \"\\n\",\n      peg$c42 = peg$literalExpectation(\"\\n\", false),\n      peg$c43 = \"\\r\\n\",\n      peg$c44 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c45 = \"\\r\",\n      peg$c46 = peg$literalExpectation(\"\\r\", false),\n      peg$c47 = \",\",\n      peg$c48 = peg$literalExpectation(\",\", false),\n      peg$c49 = function(colName, type, comment) {\r\n        return {colName: colName, type:type, comment: comment || \"\"}\r\n      },\n      peg$c50 = /^[a-z]/i,\n      peg$c51 = peg$classExpectation([[\"a\", \"z\"]], false, true),\n      peg$c52 = function(char) {\r\n        return char.map(r => r.toLowerCase()).join(\"\")\r\n      },\n      peg$c53 = \"signed\",\n      peg$c54 = peg$literalExpectation(\"signed\", true),\n      peg$c55 = \"unsigned\",\n      peg$c56 = peg$literalExpectation(\"unsigned\", true),\n      peg$c57 = /^[0-9, ]/,\n      peg$c58 = peg$classExpectation([[\"0\", \"9\"], \",\", \" \"], false, false),\n      peg$c59 = /^[0-9]/,\n      peg$c60 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c61 = /^[a-zA-Z_0-9]/,\n      peg$c62 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\", [\"0\", \"9\"]], false, false),\n      peg$c63 = \"not null\",\n      peg$c64 = peg$literalExpectation(\"NOT NULL\", true),\n      peg$c65 = \"auto_increment\",\n      peg$c66 = peg$literalExpectation(\"AUTO_INCREMENT\", true),\n      peg$c67 = \"null\",\n      peg$c68 = peg$literalExpectation(\"NULL\", true),\n      peg$c69 = \"''\",\n      peg$c70 = peg$literalExpectation(\"''\", false),\n      peg$c71 = function(ct) {\r\n        return ct.join(\"\")\r\n      },\n      peg$c72 = \"`\",\n      peg$c73 = peg$literalExpectation(\"`\", false),\n      peg$c74 = function(ft) {\r\n          return ft.join(\"\")\r\n      },\n      peg$c75 = /^[^']/,\n      peg$c76 = peg$classExpectation([\"'\"], true, false),\n      peg$c77 = \"PRIMARY\",\n      peg$c78 = peg$literalExpectation(\"PRIMARY\", false),\n      peg$c79 = \"key\",\n      peg$c80 = peg$literalExpectation(\"KEY\", true),\n      peg$c81 = function(noPkKey) {\r\n         return noPkKey || \"pk\"\r\n      },\n      peg$c82 = \"unique\",\n      peg$c83 = peg$literalExpectation(\"UNIQUE\", true),\n      peg$c84 = function(keyName) {\r\n         return keyName\r\n      },\n      peg$c85 = function(kx) {\r\n        return kx\r\n      },\n      peg$c86 = function(keyName1, key) {\r\n        return {name: keyName1, keys: [].concat(key) }\r\n      },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSqls();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSqls() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseTableDef();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseCommentLine();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseNoCreateStat();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseTableDef();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseCommentLine();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseNoCreateStat();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine1() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s2 = peg$c0;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c2.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c2.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseLineBreak();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine2() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c5) {\n        s2 = peg$c5;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c7.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c9) {\n            s4 = peg$c9;\n            peg$currPos += 3;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseLineBreak();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c4();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine() {\n    var s0;\n\n    s0 = peg$parseCommentLine1();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCommentLine2();\n    }\n\n    return s0;\n  }\n\n  function peg$parseNoCreateStat() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c11) {\n      s2 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c13.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c13.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 59) {\n          s3 = peg$c15;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseLineBreak();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTableDef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c11) {\n        s2 = input.substr(peg$currPos, 6);\n        peg$currPos += 6;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c17) {\n            s4 = input.substr(peg$currPos, 5);\n            peg$currPos += 5;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsefield();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s8 = peg$c19;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseColsDef();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseKeyStats();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s11 = peg$c21;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseTableEnd();\n                          if (s12 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 59) {\n                              s13 = peg$c15;\n                              peg$currPos++;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c23(s6, s9, s10, s12);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseKV() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseword();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c24;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c25); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseword();\n              if (s6 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5, s6];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTableEnd() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseKV();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseKV();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 7).toLowerCase() === peg$c26) {\n          s3 = input.substr(peg$currPos, 7);\n          peg$currPos += 7;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parseKV();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parseKV();\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseTableComment();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c28(s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTableComment() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c29) {\n        s2 = input.substr(peg$currPos, 7);\n        peg$currPos += 7;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c24;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c25); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s6 = peg$c31;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c32); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsecommentText();\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s8 = peg$c31;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c33(s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentity() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c34.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c37.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseany() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseColsDef() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseColDef();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseColDef();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineBreak() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c41;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c43) {\n        s0 = peg$c43;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 13) {\n          s0 = peg$c45;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseColDef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefield();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetype();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsetypeModify();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsecolsModify();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsecomment();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 44) {\n                        s10 = peg$c47;\n                        peg$currPos++;\n                      } else {\n                        s10 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                      }\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parse_();\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c49(s2, s4, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetype() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c50.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c50.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c52(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseintSign() {\n    var s0;\n\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c53) {\n      s0 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c55) {\n        s0 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetypeModify() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c19;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c57.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c58); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c57.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c58); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c21;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c22); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseintSign();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5, s6];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigits() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c59.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c59.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c60); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseword() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c61.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c61.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemodifyVerb() {\n    var s0;\n\n    s0 = peg$parsedefault();\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c63) {\n        s0 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 14).toLowerCase() === peg$c65) {\n          s0 = input.substr(peg$currPos, 14);\n          peg$currPos += 14;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefault() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c26) {\n      s1 = input.substr(peg$currPos, 7);\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedefaultValue();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefaultValue() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s1 = peg$c31;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentity();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c31;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c32); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c67) {\n        s0 = input.substr(peg$currPos, 4);\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c68); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c69) {\n          s0 = peg$c69;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c70); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedigits();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolsModify() {\n    var s0, s1, s2, s3;\n\n    s0 = [];\n    s1 = peg$currPos;\n    s2 = peg$parsemodifyVerb();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$currPos;\n      s2 = peg$parsemodifyVerb();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c29) {\n      s1 = input.substr(peg$currPos, 7);\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c31;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c32); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsecommentText();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s5 = peg$c31;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c32); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c71(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefield() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 96) {\n      s1 = peg$c72;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c73); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentity();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 96) {\n          s3 = peg$c72;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c74(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommentText() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c75.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c76); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c75.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyName() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c77) {\n      s1 = peg$c77;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c79) {\n          s3 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c80); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsenoPkKey();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c81(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyType() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c82) {\n      s1 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c83); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c79) {\n          s3 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c80); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c79) {\n        s0 = input.substr(peg$currPos, 3);\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenoPkKey() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsekeyType();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefield();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c84(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekey() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefield();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c47;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c85(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyStat() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsekeyName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s4 = peg$c19;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsekey();\n            if (s6 !== peg$FAILED) {\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsekey();\n              }\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c21;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c47;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c86(s2, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyStats() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsekeyStat();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsekeyStat();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nfunction SqlEditor(props) {\r\n  function onLoad(editor) {\r\n  }\r\n\r\n  return (\r\n    <AceEditor\r\n      width={props.width}\r\n      placeholder=\"Type SQL Create Table Statement Here\"\r\n      mode=\"mysql\"\r\n      theme={props.theme}\r\n      name=\"sqlEditor\"\r\n      onChange={props.onChange}\r\n      onLoad={onLoad}\r\n      fontSize={14}\r\n      showPrintMargin={false}\r\n      showGutter={true}\r\n      highlightActiveLine={true}\r\n      minLines={100}\r\n      maxLines={Infinity}\r\n      value={props.code}\r\n      annotations={props.annotations}\r\n      setOptions={{\r\n        enableBasicAutocompletion: true,\r\n        enableLiveAutocompletion: true,\r\n        enableSnippets: true,\r\n        showGutter: true,\r\n        showLineNumbers: true,\r\n        tabSize: 2,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SqlEditor;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { FiClipboard } from \"react-icons/fi\";\r\nimport { useClipboard } from \"use-clipboard-copy\";\r\n\r\nfunction TsEditor(props) {\r\n  const clipboard = useClipboard();\r\n\r\n  const handleCopy = React.useCallback(() => {\r\n    clipboard.copy(props.code);\r\n  }, [clipboard, props.code]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{ float: \"right\", marginRight: \"20px\" }}\r\n        onClick={handleCopy}\r\n        className=\"button -flower center\"\r\n      >\r\n        <FiClipboard size=\"1.5em\" />\r\n        Copy\r\n      </div>\r\n      <AceEditor\r\n        width={props.width}\r\n        placeholder={props.placeholder}\r\n        mode=\"typescript\"\r\n        theme={props.theme}\r\n        name=\"tsEditor\"\r\n        readOnly={true}\r\n        fontSize={14}\r\n        showPrintMargin={false}\r\n        showGutter={true}\r\n        highlightActiveLine={false}\r\n        value={props.code}\r\n        minLines={100}\r\n        maxLines={Infinity}\r\n        setOptions={{\r\n          enableBasicAutocompletion: false,\r\n          enableLiveAutocompletion: false,\r\n          enableSnippets: false,\r\n          showLineNumbers: true,\r\n          showGutter: false,\r\n          tabSize: 2,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TsEditor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { parse } from \"./lib/parse\";\r\nimport SqlEditor from \"./components/SqlEditor\";\r\nimport TsEditor from \"./components/TsEditor\";\r\nimport \"ace-builds/src-noconflict/mode-mysql\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/theme-gruvbox\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport Toggle from \"react-toggle\";\r\nimport \"./css/bootstrap.min.css\";\r\n\r\nconst sqlTypeToTsTypeMap = {\r\n  char: \"string\",\r\n  varchar: \"string\",\r\n  text: \"string\",\r\n  int: \"number\",\r\n  smallint: \"number\",\r\n  bigint: \"number\",\r\n  tinyint: \"number\",\r\n  float: \"number\"\r\n};\r\n\r\nconst exampleSqlCode = `CREATE TABLE \\`profile\\` (\r\n  \\`roleId\\` bigint(20) NOT NULL COMMENT 'playerId',\r\n  \\`location\\` varchar(50) DEFAULT NULL COMMENT 'country-province-city',\r\n  \\`signature\\` varchar(100) DEFAULT NULL COMMENT 'signature text',\r\n  \\`avatar\\` varchar(255) DEFAULT NULL COMMENT 'user avatar url',\r\n  PRIMARY KEY (\\`RoleId\\`),\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='user profile';\r\n`;\r\n\r\nfunction App() {\r\n  const [sqlCode, setSqlCode] = useState(exampleSqlCode);\r\n  const [tsCode, setTsCode] = useState(\"\");\r\n  const [theme] = useState(\"gruvbox\");\r\n  const [commentFlag, setCommentFlag] = useState(true);\r\n  const tsPh = \"// Generated Typescript Interface\";\r\n\r\n  function onSqlChange(code) {\r\n    setSqlCode(code);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let ts = sql2tsCode(sqlCode);\r\n    setTsCode(ts);\r\n  }, [sqlCode, commentFlag]);\r\n\r\n  const containerStyles = {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"6fr 4fr\",\r\n    gridTemplateAreas: \"sql-editor ts-editor\",\r\n    gap: \"10px 20px\",\r\n  };\r\n\r\n  function toggleComment(e) {\r\n    if (e.target.checked) {\r\n      setCommentFlag(true);\r\n    } else {\r\n      setCommentFlag(false);\r\n    }\r\n  }\r\n\r\n  function astToInterface(tableDef) {\r\n    if (tableDef.tableName) {\r\n      let lines = [];\r\n      if (commentFlag && tableDef.comment) {\r\n        const tbCommentLine = `/** ${tableDef.comment} */`;\r\n        lines.push(tbCommentLine);\r\n      }\r\n      let startLine = `interface ${tableDef.tableName} {`;\r\n      lines.push(startLine);\r\n      for (let col of tableDef.cols) {\r\n        let type = sqlTypeToTsType(col.type);\r\n        let colLine = `  ${col.colName}: ${type}`;\r\n        if (commentFlag && col.comment) {\r\n          const colComment = `  /** ${col.comment} */`;\r\n          lines.push(colComment)\r\n        }\r\n        lines.push(colLine);\r\n      }\r\n      let endLine = \"}\";\r\n      lines.push(endLine);\r\n      lines.push(\"\\n\");\r\n      return lines.join(\"\\n\");\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  function sqlTypeToTsType(type) {\r\n    return sqlTypeToTsTypeMap[type] || \"any\";\r\n  }\r\n\r\n  function sql2tsCode(code) {\r\n    if (!code) return tsPh;\r\n    try {\r\n      let parseRet = parse(code);\r\n      let ret = parseRet[0];\r\n      let tsCode = ret.map(astToInterface).join(\"\");\r\n      return tsCode;\r\n    } catch (err) {\r\n      let line = err.location.start.line;\r\n      let column = err.location.start.column;\r\n      const showMessage = `Line ${line}, column ${column}:  ` + err.message;\r\n      return showMessage;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{ backgroundColor: \"#1D2021\", padding: \"20px\" }}\r\n    >\r\n      <nav\r\n        className=\"navbar navbar-expand-lg\"\r\n        style={{ display: \"flex\", justifyItems: \"flex-start\" }}\r\n      >\r\n        <span\r\n          className=\"navbar-brand\"\r\n          style={{ fontSize: \"46px\", color: \"antiquewhite\" }}\r\n        >\r\n          SQL2TS\r\n        </span>\r\n\r\n        <div\r\n          className=\"toolbar\"\r\n          style={{\r\n            display: \"flex\",\r\n            alignSelf: \"flex-end\",\r\n            paddingLeft: \"20px\",\r\n          }}\r\n        >\r\n          <div className=\"comment\">\r\n            <label style={{ display: \"flex\" }}>\r\n              <Toggle\r\n                style={{ alignSelf: \"center\" }}\r\n                defaultChecked={commentFlag}\r\n                onChange={toggleComment}\r\n              ></Toggle>\r\n              <span\r\n                style={{\r\n                  color: \"adafae\",\r\n                  fontSize: \"13px\",\r\n                  alignSelf: \"center\",\r\n                  paddingLeft: \"6px\",\r\n                }}\r\n              >\r\n                Comments\r\n              </span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"editor-zone\" style={containerStyles}>\r\n        <SqlEditor\r\n          className=\"sql-editor\"\r\n          width=\"auto\"\r\n          code={sqlCode}\r\n          onChange={onSqlChange}\r\n          theme={theme}\r\n        ></SqlEditor>\r\n\r\n        <TsEditor\r\n          placeholder={tsPh}\r\n          className=\"ts-editor\"\r\n          width=\"auto\"\r\n          code={tsCode}\r\n          theme={theme}\r\n        ></TsEditor>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}