{"version":3,"sources":["lib/parse.js","components/SqlEditor.js","components/TsEditor.js","App.js","serviceWorker.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$classExpectation","peg$c6","peg$c7","peg$c8","peg$c10","peg$c12","peg$c13","peg$c14","peg$c16","peg$c18","peg$c20","peg$c22","peg$c25","peg$c27","peg$c30","peg$c32","peg$c34","peg$c35","peg$c36","peg$otherExpectation","peg$c37","peg$c38","peg$c40","peg$c42","peg$c44","peg$c46","peg$c48","peg$c50","peg$c51","peg$c54","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c62","peg$c64","peg$c66","peg$c68","peg$c71","peg$c73","peg$c74","peg$c76","peg$c78","peg$c81","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","peg$buildStructuredError","s0","s1","s2","peg$parseTableDef","peg$parseCommentLine","peg$parseNoCreateStat","peg$parseSqls","charAt","peg$parseEOF","s3","s4","peg$parse_","test","peg$parseLineBreak","peg$parseCommentLine1","substr","peg$parseCommentLine2","toLowerCase","s6","s8","s9","s10","s11","s12","s13","peg$parsefield","peg$parseColDef","peg$parseColsDef","peg$parsekeyStat","peg$parseKeyStats","s5","s7","peg$parseKV","peg$parsecommentText","peg$parseTableComment","comment","peg$parseTableEnd","tableName","cols","keys","peg$parseword","peg$parseIdentity","peg$parsetype","peg$parsedigits","peg$parseintSign","peg$parsetypeModify","peg$parsemodifyVerb","peg$parsecolsModify","peg$parsecomment","colName","peg$parsedefaultValue","peg$parsedefault","peg$parsekeyName","peg$parsekeyType","peg$parsenoPkKey","peg$parsekey","concat","SqlEditor","props","width","placeholder","mode","theme","onChange","onLoad","editor","fontSize","showPrintMargin","showGutter","highlightActiveLine","minLines","maxLines","Infinity","value","code","annotations","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","TsEditor","clipboard","useClipboard","handleCopy","React","useCallback","copy","style","float","marginRight","onClick","className","size","readOnly","sqlTypeToTsTypeMap","varchar","int","smallint","bigint","tinyint","App","useState","sqlCode","setSqlCode","tsCode","setTsCode","commentFlag","setCommentFlag","tsPh","astToInterface","tableDef","lines","tbCommentLine","startLine","col","sqlTypeToTsType","colLine","colComment","useEffect","ts","map","err","sql2tsCode","backgroundColor","padding","display","justifyItems","color","alignSelf","paddingLeft","defaultChecked","e","target","checked","gridTemplateColumns","gridTemplateAreas","gap","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.da265b4c.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = \"#\",\n      peg$c1 = peg$literalExpectation(\"#\", false),\n      peg$c2 = /^[^#\\n\\r]/,\n      peg$c3 = peg$classExpectation([\"#\", \"\\n\", \"\\r\"], true, false),\n      peg$c4 = function() {return \"\"},\n      peg$c5 = \"/*!\",\n      peg$c6 = peg$literalExpectation(\"/*!\", false),\n      peg$c7 = /^[^\\n\\r*\\/]/,\n      peg$c8 = peg$classExpectation([\"\\n\", \"\\r\", \"*\", \"/\"], true, false),\n      peg$c9 = \"*/;\",\n      peg$c10 = peg$literalExpectation(\"*/;\", false),\n      peg$c11 = \"create\",\n      peg$c12 = peg$literalExpectation(\"CREATE\", true),\n      peg$c13 = /^[^;]/,\n      peg$c14 = peg$classExpectation([\";\"], true, false),\n      peg$c15 = \";\",\n      peg$c16 = peg$literalExpectation(\";\", false),\n      peg$c17 = \"table\",\n      peg$c18 = peg$literalExpectation(\"TABLE\", true),\n      peg$c19 = \"(\",\n      peg$c20 = peg$literalExpectation(\"(\", false),\n      peg$c21 = \")\",\n      peg$c22 = peg$literalExpectation(\")\", false),\n      peg$c23 = function(tbName, cols, keys, tbEnd) {\n          return {tableName: tbName, cols: cols, keys: keys, comment: tbEnd.comment}\n      },\n      peg$c24 = \"=\",\n      peg$c25 = peg$literalExpectation(\"=\", false),\n      peg$c26 = \"default\",\n      peg$c27 = peg$literalExpectation(\"DEFAULT\", true),\n      peg$c28 = function(comment) {\n      return {comment:comment}\n      },\n      peg$c29 = \"comment\",\n      peg$c30 = peg$literalExpectation(\"COMMENT\", true),\n      peg$c31 = \"'\",\n      peg$c32 = peg$literalExpectation(\"'\", false),\n      peg$c33 = function(ct) {\n         return ct.join(\"\")\n      },\n      peg$c34 = /^[a-zA-Z0-9_\\-]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c36 = peg$otherExpectation(\"whitespace\"),\n      peg$c37 = /^[ \\n\\r\\t]/,\n      peg$c38 = peg$classExpectation([\" \", \"\\n\", \"\\r\", \"\\t\"], false, false),\n      peg$c39 = peg$otherExpectation(\"any\"),\n      peg$c40 = peg$anyExpectation(),\n      peg$c41 = \"\\n\",\n      peg$c42 = peg$literalExpectation(\"\\n\", false),\n      peg$c43 = \"\\r\\n\",\n      peg$c44 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c45 = \"\\r\",\n      peg$c46 = peg$literalExpectation(\"\\r\", false),\n      peg$c47 = \",\",\n      peg$c48 = peg$literalExpectation(\",\", false),\n      peg$c49 = function(colName, type, comment) {\n        return {colName: colName, type:type, comment: comment || \"\"}\n      },\n      peg$c50 = /^[a-z]/,\n      peg$c51 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c52 = function(char) {return char.join(\"\")},\n      peg$c53 = \"signed\",\n      peg$c54 = peg$literalExpectation(\"signed\", true),\n      peg$c55 = \"unsigned\",\n      peg$c56 = peg$literalExpectation(\"unsigned\", true),\n      peg$c57 = /^[0-9]/,\n      peg$c58 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c59 = /^[a-zA-Z_0-9]/,\n      peg$c60 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\", [\"0\", \"9\"]], false, false),\n      peg$c61 = \"not null\",\n      peg$c62 = peg$literalExpectation(\"NOT NULL\", true),\n      peg$c63 = \"auto_increment\",\n      peg$c64 = peg$literalExpectation(\"AUTO_INCREMENT\", true),\n      peg$c65 = \"null\",\n      peg$c66 = peg$literalExpectation(\"NULL\", true),\n      peg$c67 = \"''\",\n      peg$c68 = peg$literalExpectation(\"''\", false),\n      peg$c69 = function(ct) {\n        return ct.join(\"\")\n      },\n      peg$c70 = \"`\",\n      peg$c71 = peg$literalExpectation(\"`\", false),\n      peg$c72 = function(ft) {\n          return ft.join(\"\")\n      },\n      peg$c73 = /^[^']/,\n      peg$c74 = peg$classExpectation([\"'\"], true, false),\n      peg$c75 = \"PRIMARY\",\n      peg$c76 = peg$literalExpectation(\"PRIMARY\", false),\n      peg$c77 = \"key\",\n      peg$c78 = peg$literalExpectation(\"KEY\", true),\n      peg$c79 = function(noPkKey) {\n         return noPkKey || \"pk\"\n      },\n      peg$c80 = \"unique\",\n      peg$c81 = peg$literalExpectation(\"UNIQUE\", true),\n      peg$c82 = function(keyName) {\n         return keyName\n      },\n      peg$c83 = function(kx) {\n        return kx\n      },\n      peg$c84 = function(keyName1, key) {\n        return {name: keyName1, keys: [].concat(key) }\n      },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSqls();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSqls() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseTableDef();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseCommentLine();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseNoCreateStat();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseTableDef();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseCommentLine();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseNoCreateStat();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine1() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s2 = peg$c0;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c2.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c2.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseLineBreak();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine2() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c5) {\n        s2 = peg$c5;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c7.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c9) {\n            s4 = peg$c9;\n            peg$currPos += 3;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseLineBreak();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c4();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine() {\n    var s0;\n\n    s0 = peg$parseCommentLine1();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCommentLine2();\n    }\n\n    return s0;\n  }\n\n  function peg$parseNoCreateStat() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c11) {\n      s2 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c13.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c13.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 59) {\n          s3 = peg$c15;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseLineBreak();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTableDef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c11) {\n        s2 = input.substr(peg$currPos, 6);\n        peg$currPos += 6;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c17) {\n            s4 = input.substr(peg$currPos, 5);\n            peg$currPos += 5;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsefield();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s8 = peg$c19;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseColsDef();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseKeyStats();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s11 = peg$c21;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseTableEnd();\n                          if (s12 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 59) {\n                              s13 = peg$c15;\n                              peg$currPos++;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c23(s6, s9, s10, s12);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseKV() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseword();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c24;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c25); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseword();\n              if (s6 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5, s6];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTableEnd() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseKV();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseKV();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 7).toLowerCase() === peg$c26) {\n          s3 = input.substr(peg$currPos, 7);\n          peg$currPos += 7;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parseKV();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parseKV();\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseTableComment();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c28(s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTableComment() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c29) {\n        s2 = input.substr(peg$currPos, 7);\n        peg$currPos += 7;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c24;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c25); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s6 = peg$c31;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c32); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsecommentText();\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s8 = peg$c31;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c33(s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentity() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c34.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c37.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseany() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseColsDef() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseColDef();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseColDef();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineBreak() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c41;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c43) {\n        s0 = peg$c43;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 13) {\n          s0 = peg$c45;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseColDef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefield();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetype();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsetypeModify();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsecolsModify();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsecomment();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c47;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c49(s2, s4, s8);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetype() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c50.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c50.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c52(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseintSign() {\n    var s0;\n\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c53) {\n      s0 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c55) {\n        s0 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetypeModify() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c19;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsedigits();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c21;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c22); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseintSign();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5, s6];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigits() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c57.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c57.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseword() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c59.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c59.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c60); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemodifyVerb() {\n    var s0;\n\n    s0 = peg$parsedefault();\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c61) {\n        s0 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 14).toLowerCase() === peg$c63) {\n          s0 = input.substr(peg$currPos, 14);\n          peg$currPos += 14;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c64); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefault() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c26) {\n      s1 = input.substr(peg$currPos, 7);\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedefaultValue();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefaultValue() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s1 = peg$c31;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentity();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c31;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c32); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c65) {\n        s0 = input.substr(peg$currPos, 4);\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c66); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c67) {\n          s0 = peg$c67;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedigits();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolsModify() {\n    var s0, s1, s2, s3;\n\n    s0 = [];\n    s1 = peg$currPos;\n    s2 = peg$parsemodifyVerb();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$currPos;\n      s2 = peg$parsemodifyVerb();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c29) {\n      s1 = input.substr(peg$currPos, 7);\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c31;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c32); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsecommentText();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s5 = peg$c31;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c32); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c69(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefield() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 96) {\n      s1 = peg$c70;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c71); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentity();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 96) {\n          s3 = peg$c70;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c71); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c72(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommentText() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c73.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c73.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyName() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c75) {\n      s1 = peg$c75;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c76); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c77) {\n          s3 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c78); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsenoPkKey();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c79(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyType() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c80) {\n      s1 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c77) {\n          s3 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c78); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c77) {\n        s0 = input.substr(peg$currPos, 3);\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c78); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenoPkKey() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsekeyType();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefield();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c82(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekey() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefield();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c47;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c83(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekeyStat() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsekeyName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s4 = peg$c19;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsekey();\n            if (s6 !== peg$FAILED) {\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsekey();\n              }\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c21;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c47;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c84(s2, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyStats() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsekeyStat();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsekeyStat();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\n\nfunction SqlEditor(props) {\n  function onLoad(editor) {\n  }\n\n  return (\n    <AceEditor\n      width={props.width}\n      placeholder=\"Type SQL Create Table Statement Here\"\n      mode=\"mysql\"\n      theme={props.theme}\n      name=\"sqlEditor\"\n      onChange={props.onChange}\n      onLoad={onLoad}\n      fontSize={14}\n      showPrintMargin={false}\n      showGutter={true}\n      highlightActiveLine={true}\n      minLines={100}\n      maxLines={Infinity}\n      value={props.code}\n      annotations={props.annotations}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: true,\n        showGutter: true,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}\n    />\n  );\n}\n\nexport default SqlEditor;\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport { FiClipboard } from \"react-icons/fi\";\nimport { useClipboard } from \"use-clipboard-copy\";\n\nfunction TsEditor(props) {\n  const clipboard = useClipboard();\n\n  const handleCopy = React.useCallback(() => {\n    clipboard.copy(props.code);\n  }, [clipboard.copy, props.code]);\n\n  return (\n    <div>\n      <div\n        style={{ float: \"right\", marginRight: \"20px\" }}\n        onClick={handleCopy}\n        className=\"button -flower center\"\n      >\n        <FiClipboard size=\"1.5em\" />\n        Copy\n      </div>\n      <AceEditor\n        width={props.width}\n        placeholder={props.placeholder}\n        mode=\"typescript\"\n        theme={props.theme}\n        name=\"tsEditor\"\n        readOnly={true}\n        fontSize={14}\n        showPrintMargin={false}\n        showGutter={true}\n        highlightActiveLine={false}\n        value={props.code}\n        minLines={100}\n        maxLines={Infinity}\n        setOptions={{\n          enableBasicAutocompletion: false,\n          enableLiveAutocompletion: false,\n          enableSnippets: false,\n          showLineNumbers: true,\n          showGutter: false,\n          tabSize: 2,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default TsEditor;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { parse } from \"./lib/parse\";\nimport SqlEditor from \"./components/SqlEditor\";\nimport TsEditor from \"./components/TsEditor\";\nimport \"ace-builds/src-noconflict/mode-mysql\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/theme-gruvbox\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport Toggle from \"react-toggle\";\nimport \"./css/bootstrap.min.css\";\n\nconst sqlTypeToTsTypeMap = {\n  varchar: \"string\",\n  text: \"string\",\n  int: \"number\",\n  smallint: \"number\",\n  bigint: \"number\",\n  tinyint: \"number\",\n};\n\nconst exampleSqlCode = `CREATE TABLE \\`profile\\` (\n  \\`roleId\\` bigint(20) NOT NULL COMMENT 'playerId',\n  \\`location\\` varchar(50) DEFAULT NULL COMMENT 'country-province-city',\n  \\`signature\\` varchar(100) DEFAULT NULL COMMENT 'signature text',\n  \\`avatar\\` varchar(255) DEFAULT NULL COMMENT 'user avatar url',\n  PRIMARY KEY (\\`RoleId\\`),\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='user profile';\n`;\n\nfunction App() {\n  const [sqlCode, setSqlCode] = useState(exampleSqlCode);\n  const [tsCode, setTsCode] = useState(\"\");\n  const [theme] = useState(\"gruvbox\");\n  const [commentFlag, setCommentFlag] = useState(true);\n  const tsPh = \"// Generated Typescript Interface\";\n\n  function onSqlChange(code) {\n    setSqlCode(code);\n  }\n\n  useEffect(() => {\n    let ts = sql2tsCode(sqlCode);\n    setTsCode(ts);\n  }, [sqlCode, commentFlag]);\n\n  const containerStyles = {\n    display: \"grid\",\n    gridTemplateColumns: \"6fr 4fr\",\n    gridTemplateAreas: \"sql-editor ts-editor\",\n    gap: \"10px 20px\",\n  };\n\n  function toggleComment(e) {\n    if (e.target.checked) {\n      setCommentFlag(true);\n    } else {\n      setCommentFlag(false);\n    }\n  }\n\n  function astToInterface(tableDef) {\n    if (tableDef.tableName) {\n      let lines = [];\n      if (commentFlag && tableDef.comment) {\n        const tbCommentLine = `/**\\n * ${tableDef.comment}\\n */`;\n        lines.push(tbCommentLine);\n      }\n      let startLine = `interface ${tableDef.tableName} {`;\n      lines.push(startLine);\n      for (let col of tableDef.cols) {\n        let type = sqlTypeToTsType(col.type);\n        let colLine = `  ${col.colName}: ${type}`;\n        if (commentFlag && col.comment) {\n          const colComment = `  /**\\n   * ${col.comment}\\n   */`;\n          lines.push(colComment)\n        }\n        lines.push(colLine);\n      }\n      let endLine = \"}\";\n      lines.push(endLine);\n      lines.push(\"\\n\");\n      return lines.join(\"\\n\");\n    } else {\n      return \"\";\n    }\n  }\n\n  function sqlTypeToTsType(type) {\n    return sqlTypeToTsTypeMap[type] || \"any\";\n  }\n\n  function sql2tsCode(code) {\n    if (!code) return tsPh;\n    try {\n      let parseRet = parse(code);\n      let ret = parseRet[0];\n      let tsCode = ret.map(astToInterface).join(\"\");\n      return tsCode;\n    } catch (err) {\n      let line = err.location.start.line;\n      let column = err.location.start.column;\n      const showMessage = `Line ${line}, column ${column}:  ` + err.message;\n      return showMessage;\n    }\n  }\n\n  return (\n    <div\n      className=\"app\"\n      style={{ backgroundColor: \"#1D2021\", padding: \"20px\" }}\n    >\n      <nav\n        className=\"navbar navbar-expand-lg\"\n        style={{ display: \"flex\", justifyItems: \"flex-start\" }}\n      >\n        <span\n          className=\"navbar-brand\"\n          style={{ fontSize: \"46px\", color: \"antiquewhite\" }}\n        >\n          SQL2TS\n        </span>\n\n        <div\n          className=\"toolbar\"\n          style={{\n            display: \"flex\",\n            alignSelf: \"flex-end\",\n            paddingLeft: \"20px\",\n          }}\n        >\n          <div className=\"comment\">\n            <label style={{ display: \"flex\" }}>\n              <Toggle\n                style={{ alignSelf: \"center\" }}\n                defaultChecked={commentFlag}\n                onChange={toggleComment}\n              ></Toggle>\n              <span\n                style={{\n                  color: \"adafae\",\n                  fontSize: \"13px\",\n                  alignSelf: \"center\",\n                  paddingLeft: \"6px\",\n                }}\n              >\n                Comments\n              </span>\n            </label>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"editor-zone\" style={containerStyles}>\n        <SqlEditor\n          className=\"sql-editor\"\n          width=\"auto\"\n          code={sqlCode}\n          onChange={onSqlChange}\n          theme={theme}\n        ></SqlEditor>\n\n        <TsEditor\n          placeholder={tsPh}\n          className=\"ts-editor\"\n          width=\"auto\"\n          code={tsCode}\n          theme={theme}\n        ></TsEditor>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}